name: Docker Compose CI Integration

on:
  push:
  pull_request:

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: Docker Compose Up
        run: docker-compose up -d
        working-directory: ./week7/week7_practice

      - name: Check running containers
        run: docker ps -a
      
      - name: Wait for healthcheck
        run: |
          echo "Waiting for Nginx healthcheck to be healthy..."
          for i in {1..10}; do
            health=$(docker inspect --format='{{.State.Health.Status}}' my_nginx)
            if [ "$health" = "healthy" ]; then
              echo "Nginx is healthy"
              exit 0
            fi
            echo "Still not healthy... retry $i"
            sleep 5
          done
          echo "Nginx failed to become healthy"
          exit 1
        shell: bash

      - name: Integration Test (Check Web Response)
        run: |
          docker exec my_nginx curl -f http://localhost:80 || { echo "Web response failed!"; exit 1; }

      - name: Create artifact directory
        if: always()
        run: mkdir -p artifact
        working-directory: ./week7/week7_practice

      - name: Collect logs
        if: always()
        run: docker-compose logs > docker-logs.txt
        working-directory: ./week7/week7_practice

      - name: Check if logs file exists
        if: always()
        run: ls -l ./week7/week7_practice/docker-logs.txt || { echo "Log file not found"; exit 1; }

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: ./week7/week7_practice/docker-logs.txt

      - name: Docker Compose Down
        if: always()
        run: docker-compose down
        working-directory: ./week7/week7_practice